#!/usr/bin/env node
// Run as bin
'use strict';
var path = require('path');
var fs   = require('fs');
var config;
var argv = require('yargs')
    .option('config', {
        alias    : 'c',
        demand   : true,
        default  : 'foxman.config.js',
        describe : 'Config file. Options read readme.md',
        boolean  : 0
    })
    .option('build_pid',{
        alias    : 'b',
        demand   : true,
        default  : false,
        describe : 'is need build and init the project!'
    })
    .option('update',{
        alias    : 'u',
        demand   : false,
        default  : false,
        describe : 'is update from nei'
    })
    .usage('Usage: foxman [options]')
    .example('foxman -c ./config.json', 'set config file')
    .help('h')
    .alias('h', 'help')
    .epilog('copyright junyu')
    .argv;

if( process.env.NODE_ENV === "development" ){
  // node_modules/[^foxman]
  // node_modules/[foxman]/node_modules
  var foxmanModuleTestReg = /(node_modules[^(foxman)]*$)|(node_modules\/*foxman[^(node_modules)]*node_modules)$/g;
  require("babel-register")({
    ignore: (filename) => {
      return foxmanModuleTestReg.test(filename);
    }
  });
  require('babel-polyfill');
}

var configPath = path.join(process.cwd(), argv.config);
var isUpdate   = argv.update || false;

try{
    config = require(configPath);
}catch(err){
    console.log(err)
    // console.log(`Error:\n ${err}`);
    process.exit(1);
}

Object.assign(config, {
    pid: argv.build_pid,
    update: argv.update,
    configPath: configPath
});

require('../app.js')(config);
